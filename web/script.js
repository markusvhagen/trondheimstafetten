mapboxgl.accessToken = 'pk.eyJ1IjoibWFya3VzdmhhZ2VuIiwiYSI6ImNtZ2NlNjNrbjE0bzkybHI1ZmM3MjV3aTEifQ.BE1AT8J3W1peoFGt4LOxOw';
    const map = new mapboxgl.Map({
        container: 'map',
        center: [10.379895, 63.432254],
        zoom: 13.5
    });

    map.on('load', () => {
            map.addSource('route', {
                'type': 'geojson',
                'data': {
                    'type': 'Feature',
                    'properties': {},
                    'geometry': {
                        'type': 'LineString',
                        'coordinates': [
                          [10.374591, 63.431215],
                          [10.374649, 63.431217],
                          [10.37472, 63.431219],
                          [10.37479, 63.43122],
                          [10.374858, 63.431221],
                          [10.374977, 63.43122],
                          [10.375096, 63.431224],
                          [10.375208, 63.431227],
                          [10.375262, 63.43123],
                          [10.375382, 63.431233],
                          [10.375549, 63.431234],
                          [10.375664, 63.431231],
                          [10.375887, 63.431233],
                          [10.375946, 63.431235],
                          [10.37606, 63.431237],
                          [10.376278, 63.431238],
                          [10.37645, 63.431233],
                          [10.376553, 63.431235],
                          [10.376774, 63.431242],
                          [10.377041, 63.431273],
                          [10.377344, 63.431321],
                          [10.377397, 63.43133],
                          [10.377707, 63.431391],
                          [10.37797, 63.431447],
                          [10.378021, 63.43146],
                          [10.378204, 63.431565],
                          [10.378266, 63.43161],
                          [10.378298, 63.431632],
                          [10.378462, 63.431742],
                          [10.37849, 63.431758],
                          [10.378563, 63.431812],
                          [10.37868, 63.431888],
                          [10.378847, 63.431995],
                          [10.378923, 63.432026],
                          [10.379047, 63.432064],
                          [10.379175, 63.432105],
                          [10.379432, 63.432183],
                          [10.379519, 63.432212],
                          [10.379563, 63.432226],
                          [10.379895, 63.432254],
                          [10.380078, 63.432265],
                          [10.38038, 63.432273],
                          [10.380546, 63.432275],
                          [10.380819, 63.432274],
                          [10.380978, 63.432279],
                          [10.381213, 63.432315],
                          [10.381429, 63.432409],
                          [10.381624, 63.432516],
                          [10.381659, 63.432567],
                          [10.381807, 63.432686],
                          [10.3819, 63.432721],
                          [10.382228, 63.432804],
                          [10.382335, 63.432823],
                          [10.382661, 63.432888],
                          [10.382762, 63.432915],
                          [10.383052, 63.432998],
                          [10.383099, 63.433009],
                          [10.383337, 63.433068],
                          [10.383487, 63.433112],
                          [10.383797, 63.433182],
                          [10.383997, 63.433229],
                          [10.384317, 63.433311],
                          [10.38437, 63.433328],
                          [10.384679, 63.433421],
                          [10.384827, 63.433465],
                          [10.385126, 63.433543],
                          [10.385271, 63.433588],
                          [10.385367, 63.433623],
                          [10.38566, 63.433719],
                          [10.385755, 63.433752],
                          [10.386041, 63.433846],
                          [10.386231, 63.433917],
                          [10.386517, 63.434022],
                          [10.386711, 63.434089],
                          [10.386992, 63.434187],
                          [10.387043, 63.434205],
                          [10.387287, 63.434292],
                          [10.387476, 63.43436],
                          [10.387621, 63.434406],
                          [10.387919, 63.434508],
                          [10.388205, 63.434598],
                          [10.388302, 63.434628],
                          [10.38858, 63.434723],
                          [10.388677, 63.434759],
                          [10.388949, 63.434845],
                          [10.389091, 63.434893],
                          [10.389382, 63.434996],
                          [10.389473, 63.435032],
                          [10.389718, 63.435109],
                          [10.389862, 63.435152],
                          [10.390147, 63.435246],
                          [10.390252, 63.43528],
                          [10.390554, 63.435382],
                          [10.390658, 63.435418],
                          [10.390808, 63.435463],
                          [10.390956, 63.435513],
                          [10.391003, 63.435527],
                          [10.391294, 63.435617],
                          [10.391428, 63.435653],
                          [10.391505, 63.435675],
                          [10.391717, 63.43573],
                          [10.391803, 63.435754],
                          [10.392107, 63.435843],
                          [10.392152, 63.435857],
                          [10.392459, 63.435951],
                          [10.392621, 63.435999],
                          [10.392926, 63.436089],
                          [10.392981, 63.436107],
                          [10.393329, 63.436215],
                          [10.393387, 63.436233],
                          [10.39345, 63.436248],
                          [10.393742, 63.436325],
                          [10.393851, 63.436351],
                          [10.394118, 63.436409],
                          [10.394447, 63.436492],
                          [10.394501, 63.436505],
                          [10.394818, 63.436602],
                          [10.394929, 63.436629],
                          [10.395257, 63.436718],
                          [10.39531, 63.436732],
                          [10.39565, 63.43682],
                          [10.395759, 63.436849],
                          [10.39607, 63.436948],
                          [10.396195, 63.437086],
                          [10.396227, 63.437111],
                          [10.396351, 63.437176],
                          [10.396399, 63.437195],
                          [10.396489, 63.437232],
                          [10.396761, 63.43735],
                          [10.396858, 63.437386],
                          [10.397143, 63.437497],
                          [10.39719, 63.437521],
                          [10.397473, 63.437636],
                          [10.397621, 63.437699],
                          [10.39791, 63.437805],
                          [10.398093, 63.437877],
                          [10.398367, 63.437985],
                          [10.398459, 63.438028],
                          [10.398746, 63.438137],
                          [10.398843, 63.438176],
                          [10.399158, 63.438269],
                          [10.399204, 63.438284],
                          [10.399474, 63.438407],
                          [10.399565, 63.438443],
                          [10.399753, 63.438533],
                          [10.399912, 63.438588],
                          [10.400211, 63.438698],
                          [10.400305, 63.438735],
                          [10.400584, 63.43884],
                          [10.400683, 63.438876],
                          [10.400853, 63.438927],
                          [10.400848, 63.438927]
                        ]
                    }
                }
            });
            map.addLayer({
                'id': 'route',
                'type': 'line',
                'source': 'route',
                'layout': {
                    'line-join': 'round',
                    'line-cap': 'round'
                },
                'paint': {
                    'line-color': 'red',
                    'line-width': 5
                }
            });
        });

Chart.register( Chart.LineElement, Chart.LineController, Chart.Legend, Chart.Tooltip, Chart.LinearScale, Chart.PointElement, Chart.Filler, Chart.Title);

  const ctx = document.getElementById("route-elevation-chart").getContext("2d");
  const chartData = {
    labels: [0, 2, 6, 9, 13, 19, 25, 30, 33, 39, 47, 53, 64, 67, 73, 84, 92, 98, 109, 122, 138, 141, 158, 173, 176, 191, 196, 199, 214, 216, 223, 234, 248, 253, 261, 269, 284, 290, 292, 309, 318, 333, 342, 355, 363, 376, 391, 406, 412, 427, 433, 452, 458, 476, 482, 499, 501, 515, 524, 541, 553, 571, 574, 593, 602, 619, 628, 634, 652, 658, 676, 688, 707, 719, 737, 740, 755, 768, 776, 795, 813, 818, 836, 842, 859, 868, 886, 892, 907, 916, 934, 940, 959, 965, 974, 984, 987, 1004, 1012, 1017, 1029, 1034, 1052, 1055, 1073, 1083, 1101, 1105, 1126, 1129, 1133, 1150, 1156, 1171, 1190, 1193, 1212, 1218, 1237, 1240, 1260, 1266, 1285, 1302, 1305, 1315, 1318, 1324, 1343, 1349, 1368, 1372, 1391, 1401, 1419, 1432, 1450, 1456, 1475, 1482, 1501, 1503, 1523, 1529, 1542, 1552, 1572, 1578, 1596, 1603, 1609], // this is test data
    datasets: [{
      data: [6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 8, 8, 8, 9, 9, 9, 8, 8, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 9, 9, 9, 9, 9, 9, 10, 10, 11, 11, 12, 12, 12, 12, 11, 11, 10, 10, 10, 9, 9, 8, 9, 9, 9, 9, 9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
      fill: true,
      borderColor: 'red',
      backgroundColor: 'rgba(255, 0, 0, .3)',
      tension: 0.1,
      pointRadius: 0,
      spanGaps: true
    }]
  };

  const config = {
    type: 'line',
    data: chartData,
    plugins: [{
      beforeInit: (chart, args, options) => {
        const maxHeight = Math.max(...chart.data.datasets[0].data);
        chart.options.scales.x.min = Math.min(...chart.data.labels);
        chart.options.scales.x.max = Math.max(...chart.data.labels);
        chart.options.scales.y.max = maxHeight + Math.round(maxHeight * 0.2);
        chart.options.scales.y1.max = maxHeight + Math.round(maxHeight * 0.2);
      }
    }],
    options: {
      animation: false,
      maintainAspectRatio: false,
      interaction: { intersect: false, mode: 'index' },
      tooltip: { position: 'nearest' },
      scales: {
        x: { type: 'linear' },
        y: { type: 'linear', beginAtZero: true },
        y1: { type: 'linear', display: true, position: 'right', beginAtZero: true, grid: { drawOnChartArea: false }},
      },
      plugins: {
        title: { align: "end", display: true, text: "Distance, m / Elevation, m" },
        legend: { display: false },
        tooltip: {
          displayColors: false,
          callbacks: {
            title: (tooltipItems) => {
              return "Distance: " + tooltipItems[0].label + 'm'
            },
            label: (tooltipItem) => {
              return "Elevation: " + tooltipItem.raw + 'm'
            },
          }
        }
      }
    }
  };

  const chart = new Chart(ctx, config);

// ****************** //
//       ETAPPER      //
// ****************** //
const etappe_1_coordinates =  [[10.374591, 63.431215], [10.374649, 63.431217], [10.37472, 63.431219], [10.37479, 63.43122], [10.374858, 63.431221], [10.374977, 63.43122], [10.375096, 63.431224], [10.375208, 63.431227], [10.375262, 63.43123], [10.375382, 63.431233], [10.375549, 63.431234], [10.375664, 63.431231], [10.375887, 63.431233], [10.375946, 63.431235], [10.37606, 63.431237], [10.376278, 63.431238], [10.37645, 63.431233], [10.376553, 63.431235], [10.376774, 63.431242], [10.377041, 63.431273], [10.377344, 63.431321], [10.377397, 63.43133], [10.377707, 63.431391], [10.37797, 63.431447], [10.378021, 63.43146], [10.378204, 63.431565], [10.378266, 63.43161], [10.378298, 63.431632], [10.378462, 63.431742], [10.37849, 63.431758], [10.378563, 63.431812], [10.37868, 63.431888], [10.378847, 63.431995], [10.378923, 63.432026], [10.379047, 63.432064], [10.379175, 63.432105], [10.379432, 63.432183], [10.379519, 63.432212], [10.379563, 63.432226], [10.379895, 63.432254], [10.380078, 63.432265], [10.38038, 63.432273], [10.380546, 63.432275], [10.380819, 63.432274], [10.380978, 63.432279], [10.381213, 63.432315], [10.381429, 63.432409], [10.381624, 63.432516], [10.381659, 63.432567], [10.381807, 63.432686], [10.3819, 63.432721], [10.382228, 63.432804], [10.382335, 63.432823], [10.382661, 63.432888], [10.382762, 63.432915], [10.383052, 63.432998], [10.383099, 63.433009], [10.383337, 63.433068], [10.383487, 63.433112], [10.383797, 63.433182], [10.383997, 63.433229], [10.384317, 63.433311], [10.38437, 63.433328], [10.384679, 63.433421], [10.384827, 63.433465], [10.385126, 63.433543], [10.385271, 63.433588], [10.385367, 63.433623], [10.38566, 63.433719], [10.385755, 63.433752], [10.386041, 63.433846], [10.386231, 63.433917], [10.386517, 63.434022], [10.386711, 63.434089], [10.386992, 63.434187], [10.387043, 63.434205], [10.387287, 63.434292], [10.387476, 63.43436], [10.387621, 63.434406], [10.387919, 63.434508], [10.388205, 63.434598], [10.388302, 63.434628], [10.38858, 63.434723], [10.388677, 63.434759], [10.388949, 63.434845], [10.389091, 63.434893], [10.389382, 63.434996], [10.389473, 63.435032], [10.389718, 63.435109], [10.389862, 63.435152], [10.390147, 63.435246], [10.390252, 63.43528], [10.390554, 63.435382], [10.390658, 63.435418], [10.390808, 63.435463], [10.390956, 63.435513], [10.391003, 63.435527], [10.391294, 63.435617], [10.391428, 63.435653], [10.391505, 63.435675], [10.391717, 63.43573], [10.391803, 63.435754], [10.392107, 63.435843], [10.392152, 63.435857], [10.392459, 63.435951], [10.392621, 63.435999], [10.392926, 63.436089], [10.392981, 63.436107], [10.393329, 63.436215], [10.393387, 63.436233], [10.39345, 63.436248], [10.393742, 63.436325], [10.393851, 63.436351], [10.394118, 63.436409], [10.394447, 63.436492], [10.394501, 63.436505], [10.394818, 63.436602], [10.394929, 63.436629], [10.395257, 63.436718], [10.39531, 63.436732], [10.39565, 63.43682], [10.395759, 63.436849], [10.39607, 63.436948], [10.396195, 63.437086], [10.396227, 63.437111], [10.396351, 63.437176], [10.396399, 63.437195], [10.396489, 63.437232], [10.396761, 63.43735], [10.396858, 63.437386], [10.397143, 63.437497], [10.39719, 63.437521], [10.397473, 63.437636], [10.397621, 63.437699], [10.39791, 63.437805], [10.398093, 63.437877], [10.398367, 63.437985], [10.398459, 63.438028], [10.398746, 63.438137], [10.398843, 63.438176], [10.399158, 63.438269], [10.399204, 63.438284], [10.399474, 63.438407], [10.399565, 63.438443], [10.399753, 63.438533], [10.399912, 63.438588], [10.400211, 63.438698], [10.400305, 63.438735], [10.400584, 63.43884], [10.400683, 63.438876], [10.400853, 63.438927], [10.400848, 63.438927]];
const etappe_1_distance_array = [0, 2, 6, 9, 13, 19, 25, 30, 33, 39, 47, 53, 64, 67, 73, 84, 92, 98, 109, 122, 138, 141, 158, 173, 176, 191, 196, 199, 214, 216, 223, 234, 248, 253, 261, 269, 284, 290, 292, 309, 318, 333, 342, 355, 363, 376, 391, 406, 412, 427, 433, 452, 458, 476, 482, 499, 501, 515, 524, 541, 553, 571, 574, 593, 602, 619, 628, 634, 652, 658, 676, 688, 707, 719, 737, 740, 755, 768, 776, 795, 813, 818, 836, 842, 859, 868, 886, 892, 907, 916, 934, 940, 959, 965, 974, 984, 987, 1004, 1012, 1017, 1029, 1034, 1052, 1055, 1073, 1083, 1101, 1105, 1126, 1129, 1133, 1150, 1156, 1171, 1190, 1193, 1212, 1218, 1237, 1240, 1260, 1266, 1285, 1302, 1305, 1315, 1318, 1324, 1343, 1349, 1368, 1372, 1391, 1401, 1419, 1432, 1450, 1456, 1475, 1482, 1501, 1503, 1523, 1529, 1542, 1552, 1572, 1578, 1596, 1603, 1609];
const etappe_1_altitude_array = [6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 8, 8, 8, 9, 9, 9, 8, 8, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 9, 9, 9, 9, 9, 9, 10, 10, 11, 11, 12, 12, 12, 12, 11, 11, 10, 10, 10, 9, 9, 8, 9, 9, 9, 9, 9, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8];
const etappe_1_last_index = etappe_1_distance_array.length - 1;

const etappe_2_coordinates = [[10.400787, 63.438843], [10.400787, 63.43884], [10.400861, 63.438883], [10.400915, 63.438912], [10.401104, 63.439033], [10.401162, 63.439067], [10.401309, 63.439133], [10.401405, 63.439177], [10.40155, 63.439225], [10.401736, 63.43927], [10.40191, 63.439273], [10.402195, 63.43932], [10.402407, 63.439439], [10.402426, 63.439467], [10.402654, 63.439574], [10.402838, 63.439649], [10.402957, 63.439702], [10.403044, 63.439734], [10.403256, 63.439815], [10.403572, 63.439923], [10.403626, 63.439939], [10.40398, 63.439948], [10.404204, 63.43988], [10.404245, 63.439858], [10.404428, 63.439815], [10.404483, 63.439829], [10.404584, 63.439863], [10.404833, 63.43989], [10.404995, 63.439862], [10.405173, 63.439846], [10.405536, 63.439748], [10.405601, 63.439637], [10.405679, 63.439473], [10.405924, 63.439335], [10.405966, 63.439313], [10.406232, 63.439184], [10.406308, 63.439144], [10.406542, 63.439026], [10.406582, 63.439001], [10.406827, 63.438871], [10.406869, 63.43885], [10.407114, 63.438717], [10.407235, 63.438659], [10.407547, 63.438557], [10.407897, 63.438476], [10.407963, 63.438428], [10.408032, 63.43834], [10.408065, 63.438316], [10.408255, 63.438262], [10.408372, 63.438242], [10.408715, 63.438183], [10.408938, 63.438141], [10.409105, 63.438113], [10.409463, 63.438046], [10.409632, 63.438021], [10.409962, 63.437956], [10.410073, 63.437937], [10.410411, 63.437877], [10.410633, 63.437833], [10.410983, 63.437773], [10.411225, 63.437732], [10.4116, 63.437667], [10.411714, 63.437655], [10.412098, 63.437619], [10.41232, 63.437609], [10.412509, 63.437604], [10.412875, 63.437596], [10.413281, 63.437616], [10.41335, 63.43762], [10.413708, 63.437625], [10.413768, 63.437625], [10.414022, 63.43764], [10.414274, 63.437668], [10.414565, 63.43776], [10.414863, 63.437857], [10.414907, 63.437877], [10.41509, 63.438017], [10.415125, 63.438041], [10.415226, 63.438076], [10.415355, 63.438091], [10.415675, 63.438061], [10.416016, 63.437962], [10.416111, 63.437939], [10.416454, 63.437879], [10.416563, 63.437865], [10.416824, 63.437799], [10.4169, 63.437719], [10.417009, 63.437577], [10.417128, 63.437395], [10.41714, 63.43737], [10.417253, 63.437226], [10.417281, 63.437201], [10.417444, 63.437042], [10.417503, 63.436995], [10.417674, 63.436962], [10.417984, 63.436975], [10.418143, 63.436981], [10.418467, 63.436982], [10.418519, 63.436983], [10.418731, 63.436997], [10.418864, 63.437005], [10.418973, 63.437007], [10.419337, 63.437031], [10.41956, 63.437051], [10.419622, 63.437074], [10.419862, 63.4372], [10.419994, 63.437284], [10.420171, 63.437381], [10.420304, 63.437491], [10.420368, 63.437549], [10.42061, 63.437669], [10.420651, 63.43769], [10.420842, 63.437803], [10.420878, 63.437823], [10.420947, 63.437859], [10.421179, 63.437986], [10.42129, 63.438044], [10.421476, 63.438158], [10.421676, 63.438268], [10.421752, 63.438303], [10.421976, 63.438405], [10.422079, 63.43847], [10.422313, 63.43861], [10.422382, 63.438652], [10.422593, 63.438779], [10.422696, 63.438845], [10.422914, 63.438975], [10.423067, 63.439077], [10.423276, 63.439202], [10.423348, 63.439245], [10.423583, 63.439373], [10.42368, 63.439422], [10.423855, 63.43949], [10.423998, 63.439543], [10.424219, 63.439656], [10.424253, 63.439677], [10.424431, 63.439819], [10.424503, 63.439885], [10.424672, 63.44003], [10.424734, 63.440081], [10.424901, 63.440233], [10.424932, 63.440257], [10.425101, 63.440397], [10.425283, 63.440541], [10.425344, 63.440585], [10.425526, 63.440714], [10.425601, 63.440779], [10.425673, 63.440888], [10.425698, 63.440945], [10.425791, 63.441105], [10.425835, 63.441152], [10.425992, 63.441336], [10.42607, 63.441398], [10.426209, 63.441581], [10.426225, 63.441608], [10.426392, 63.44175], [10.42642, 63.44177], [10.426591, 63.441886], [10.426639, 63.44193], [10.426832, 63.442067], [10.426868, 63.44209], [10.426987, 63.442118], [10.427192, 63.442119], [10.427299, 63.442209], [10.42733, 63.442356], [10.427309, 63.442401], [10.427289, 63.442547], [10.427289, 63.442576], [10.427268, 63.442731], [10.427276, 63.442788], [10.427301, 63.442964], [10.427328, 63.443072], [10.42742, 63.443138], [10.427471, 63.443149], [10.427757, 63.443164], [10.428118, 63.443184], [10.428297, 63.443199], [10.42835, 63.443211], [10.428497, 63.443248], [10.428858, 63.443291], [10.428909, 63.443303], [10.429226, 63.443376], [10.429458, 63.443485], [10.429685, 63.443535], [10.429729, 63.443556], [10.430034, 63.443591], [10.430096, 63.443603], [10.43038, 63.443669], [10.430537, 63.443682], [10.43077, 63.443697], [10.430927, 63.443694], [10.431012, 63.443693], [10.431048, 63.443703], [10.431233, 63.443768], [10.431562, 63.443815], [10.431661, 63.443813], [10.431714, 63.44381], [10.43183, 63.443801], [10.431939, 63.443811], [10.432118, 63.443825], [10.432456, 63.443876], [10.432575, 63.443886], [10.432935, 63.44391], [10.433294, 63.443941], [10.433351, 63.443948], [10.433687, 63.443977], [10.43381, 63.443981], [10.434163, 63.443997], [10.434349, 63.443991], [10.434482, 63.443986], [10.434841, 63.443979], [10.434956, 63.443977], [10.435319, 63.443977], [10.435444, 63.443977], [10.435774, 63.443972], [10.435817, 63.443968], [10.435942, 63.44392], [10.43607, 63.443911], [10.436416, 63.443856], [10.436786, 63.443806], [10.437091, 63.443766], [10.437474, 63.443698], [10.437536, 63.443688], [10.437712, 63.443653], [10.437828, 63.443631], [10.437951, 63.44361], [10.438186, 63.44357], [10.438236, 63.443558], [10.438286, 63.443545], [10.438334, 63.443532], [10.438494, 63.443492], [10.438712, 63.443443], [10.438764, 63.443427], [10.438821, 63.443412], [10.438927, 63.443384], [10.438982, 63.44337], [10.439084, 63.443339], [10.439132, 63.443325], [10.439181, 63.443314], [10.439383, 63.443255], [10.439681, 63.443155], [10.439784, 63.443127], [10.43987, 63.443096]];
const etappe_2_distance_array = [0, 0, 6, 10, 27, 31, 42, 49, 58, 68, 77, 92, 109, 112, 129, 141, 149, 155, 169, 189, 192, 210, 223, 226, 237, 240, 246, 259, 268, 277, 298, 311, 329, 349, 352, 372, 378, 395, 399, 418, 421, 440, 449, 468, 488, 494, 505, 508, 519, 525, 543, 556, 564, 584, 593, 611, 617, 635, 647, 666, 679, 699, 704, 724, 735, 745, 763, 783, 787, 805, 808, 820, 833, 851, 870, 873, 891, 894, 900, 907, 923, 944, 949, 967, 973, 988, 998, 1014, 1036, 1038, 1055, 1059, 1078, 1084, 1093, 1109, 1117, 1133, 1136, 1146, 1153, 1158, 1177, 1188, 1192, 1211, 1222, 1236, 1250, 1257, 1275, 1278, 1294, 1297, 1302, 1321, 1329, 1345, 1361, 1366, 1382, 1391, 1410, 1416, 1434, 1443, 1461, 1475, 1492, 1498, 1517, 1524, 1535, 1545, 1561, 1564, 1582, 1591, 1609, 1615, 1634, 1637, 1655, 1673, 1679, 1696, 1704, 1717, 1724, 1742, 1748, 1770, 1778, 1799, 1802, 1820, 1823, 1838, 1844, 1862, 1865, 1872, 1882, 1893, 1910, 1915, 1931, 1934, 1952, 1958, 1978, 1990, 1998, 2001, 2016, 2034, 2043, 2046, 2054, 2073, 2076, 2094, 2110, 2123, 2126, 2142, 2145, 2161, 2169, 2181, 2189, 2193, 2195, 2207, 2224, 2229, 2232, 2238, 2243, 2252, 2270, 2276, 2294, 2312, 2315, 2332, 2339, 2356, 2366, 2372, 2390, 2396, 2414, 2420, 2437, 2439, 2447, 2454, 2472, 2491, 2507, 2528, 2531, 2541, 2547, 2553, 2566, 2569, 2572, 2575, 2584, 2596, 2599, 2602, 2608, 2612, 2618, 2621, 2623, 2635, 2654, 2660, 2665];
const etappe_2_altitude_array = [5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 8, 8, 9, 9, 9, 9, 10, 10, 10, 9, 9, 9, 8, 8, 8, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 7, 6, 6, 6, 7, 7, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7, 6, 6, 7, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 9, 9, 10, 10, 10, 11, 11, 12, 12, 10, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 11, 10, 10, 10, 10, 10, 10, 11, 11, 10, 11, 10, 11, 10, 11, 11, 10, 11, 10, 11, 10, 11, 10, 11, 12, 12, 12, 12];
const etappe_2_last_index = etappe_1_last_index + (etappe_2_distance_array.length - 1);


const etappe_3_coordinates = [[10.440403, 63.442972], [10.440518, 63.442967], [10.440688, 63.442959], [10.440926, 63.442954], [10.440986, 63.442954], [10.441163, 63.442954], [10.441393, 63.442956], [10.441629, 63.442966], [10.441946, 63.442974], [10.442194, 63.442962], [10.4425, 63.442954], [10.442858, 63.442898], [10.442918, 63.442883], [10.443178, 63.44284], [10.443224, 63.442836], [10.443358, 63.442818], [10.443537, 63.442797], [10.443775, 63.442779], [10.443855, 63.442766], [10.443937, 63.442752], [10.444069, 63.442726], [10.444201, 63.442707], [10.444247, 63.4427], [10.444382, 63.442674], [10.444563, 63.442653], [10.444752, 63.442648], [10.444798, 63.442648], [10.444902, 63.442647], [10.445009, 63.442642], [10.445311, 63.442632], [10.44536, 63.442633], [10.445451, 63.442628], [10.4455, 63.442624], [10.445699, 63.442594], [10.445842, 63.442561], [10.446083, 63.442501], [10.446289, 63.442468], [10.446614, 63.442405], [10.446821, 63.44236], [10.447135, 63.442286], [10.447186, 63.442275], [10.447283, 63.442254], [10.447338, 63.442241], [10.447671, 63.442158], [10.447884, 63.442109], [10.448086, 63.442056], [10.4484, 63.441976], [10.448449, 63.441961], [10.44859, 63.441892], [10.448587, 63.441868], [10.448514, 63.441796], [10.448425, 63.441733], [10.44828, 63.441595], [10.448238, 63.441528], [10.448216, 63.441377], [10.448218, 63.441332], [10.448212, 63.441178], [10.448177, 63.441101], [10.448092, 63.440956], [10.448082, 63.44094], [10.448069, 63.440918], [10.448, 63.440765], [10.447962, 63.440697], [10.447953, 63.440673], [10.447882, 63.440529], [10.447861, 63.440483], [10.447831, 63.440426], [10.447817, 63.4404], [10.44768, 63.440276], [10.447343, 63.440209], [10.44703, 63.440204], [10.446932, 63.440232], [10.446906, 63.440253], [10.446931, 63.440329], [10.446986, 63.440354], [10.447103, 63.440362], [10.447315, 63.440352], [10.447377, 63.440347], [10.44756, 63.440331], [10.447815, 63.440266], [10.447815, 63.440266], [10.447912, 63.440045], [10.447863, 63.439866], [10.447848, 63.43984], [10.447784, 63.439742], [10.447775, 63.439677], [10.447801, 63.439662], [10.447846, 63.439651], [10.448122, 63.439611], [10.448435, 63.439574], [10.448541, 63.439555], [10.448793, 63.439499], [10.448844, 63.439485], [10.4489, 63.439477], [10.448999, 63.439473], [10.44912, 63.439479], [10.449481, 63.439463], [10.449536, 63.439467], [10.449592, 63.43946], [10.449835, 63.439418], [10.450225, 63.439362], [10.450344, 63.439319], [10.450369, 63.439268], [10.450321, 63.439219], [10.450296, 63.439195], [10.450181, 63.439074], [10.450118, 63.43899], [10.450045, 63.43889], [10.449963, 63.4388], [10.449867, 63.438735], [10.449603, 63.43863]];
const etappe_3_distance_array = [0, 5, 14, 26, 29, 38, 49, 61, 77, 89, 104, 123, 127, 141, 143, 150, 159, 171, 175, 180, 187, 194, 196, 204, 213, 222, 225, 230, 235, 250, 253, 257, 260, 270, 278, 292, 303, 321, 332, 350, 353, 358, 361, 380, 392, 404, 422, 425, 435, 438, 447, 455, 472, 480, 497, 502, 519, 528, 544, 546, 549, 566, 574, 577, 593, 598, 605, 608, 623, 642, 657, 663, 666, 674, 678, 684, 695, 698, 707, 722, 722, 747, 767, 770, 782, 789, 791, 794, 808, 824, 830, 844, 847, 850, 855, 861, 879, 882, 885, 898, 918, 926, 932, 938, 940, 955, 965, 977, 988, 996, 1014];
const etappe_3_altitude_array = [33, 33, 33, 33, 33, 33, 33, 33, 32, 32, 32, 33, 33, 34, 34, 35, 36, 37, 38, 39, 40, 40, 40, 41, 41, 42, 43, 43, 43, 44, 44, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 46, 46, 46, 46, 47, 47, 48, 48, 49, 49, 50, 50, 51, 51, 52, 52, 52, 53, 53, 54, 54, 54, 53, 52, 51, 51, 51, 50, 50, 50, 49, 48, 48, 48, 47, 47, 48, 48, 48, 48, 49, 48, 49, 49, 49, 50, 50, 50, 50, 50, 50, 50, 50, 51, 51, 51, 51, 51, 52, 52, 52, 52, 52, 52, 51];
const etappe_3_last_index = etappe_2_last_index + (etappe_3_distance_array.length - 1);


const etappe_4_coordinates = [[10.449063, 63.438559], [10.449063, 63.438557], [10.449021, 63.438497], [10.448988, 63.438441], [10.448901, 63.438334], [10.448883, 63.438306], [10.448856, 63.438225], [10.448785, 63.43812], [10.448732, 63.438046], [10.448679, 63.437978], [10.448596, 63.437849], [10.448582, 63.437828], [10.44855, 63.437779], [10.448497, 63.43769], [10.448475, 63.43762], [10.448454, 63.437615], [10.448401, 63.437606], [10.448238, 63.437607], [10.448178, 63.43761], [10.447817, 63.437605], [10.447698, 63.437599], [10.447545, 63.437587], [10.447306, 63.437595], [10.447267, 63.437592], [10.446997, 63.437597], [10.446674, 63.437606], [10.44657, 63.437619], [10.446237, 63.437644], [10.446045, 63.437651], [10.445642, 63.437681], [10.44547, 63.437693], [10.445132, 63.437717], [10.444873, 63.437743], [10.444737, 63.437753], [10.444677, 63.437758], [10.44432, 63.437786], [10.444263, 63.437789], [10.443899, 63.437805], [10.443795, 63.437809], [10.443751, 63.437814], [10.443408, 63.437841], [10.443291, 63.437852], [10.443066, 63.437861], [10.442911, 63.437867], [10.442575, 63.437879], [10.442514, 63.437881], [10.442181, 63.437907], [10.442062, 63.437913], [10.441855, 63.437903], [10.441683, 63.437869], [10.441394, 63.437837], [10.441337, 63.437834], [10.441215, 63.437829], [10.440856, 63.43779], [10.440737, 63.437782], [10.440524, 63.437722], [10.440215, 63.437651], [10.439829, 63.437617], [10.439767, 63.43761], [10.439703, 63.437606], [10.439367, 63.437547], [10.439042, 63.437492], [10.438937, 63.43747], [10.438593, 63.437362], [10.43853, 63.437345], [10.43847, 63.437329], [10.438231, 63.43727], [10.43799, 63.437212], [10.437673, 63.437143], [10.437516, 63.437076], [10.437532, 63.436992], [10.437506, 63.436949], [10.437398, 63.436876], [10.437283, 63.436839], [10.437189, 63.436787], [10.437085, 63.436739], [10.436963, 63.436671], [10.436927, 63.436657], [10.436888, 63.436642], [10.436698, 63.436542], [10.436652, 63.436528], [10.436609, 63.436512], [10.436336, 63.436435], [10.436013, 63.4364], [10.435683, 63.436375], [10.435424, 63.43634], [10.435232, 63.436262], [10.43521, 63.43624], [10.435181, 63.436194], [10.435163, 63.436145], [10.435154, 63.436118], [10.435115, 63.43607], [10.435078, 63.436025], [10.435063, 63.436002], [10.434985, 63.435927], [10.434964, 63.435907], [10.434877, 63.435814], [10.43482, 63.435772], [10.434755, 63.435734], [10.434639, 63.435654], [10.434581, 63.435616], [10.434545, 63.435602], [10.434316, 63.435517], [10.434124, 63.435403], [10.434021, 63.435353], [10.433885, 63.435289], [10.433677, 63.435184], [10.433638, 63.435167], [10.433538, 63.435116], [10.433416, 63.43507], [10.433175, 63.434972], [10.433094, 63.434943], [10.432836, 63.434859], [10.432622, 63.434775], [10.432555, 63.434733], [10.432333, 63.434632], [10.432167, 63.434569], [10.432089, 63.434533], [10.431857, 63.434409], [10.431817, 63.434389], [10.431771, 63.434371], [10.431535, 63.434268], [10.431496, 63.434254], [10.431226, 63.434161], [10.431173, 63.434144], [10.430849, 63.434073], [10.430669, 63.434044], [10.430305, 63.433988], [10.430124, 63.433969], [10.429791, 63.433917], [10.429753, 63.433896], [10.42968, 63.433805], [10.429669, 63.433782], [10.429616, 63.433683], [10.429605, 63.433664], [10.429586, 63.433578], [10.429583, 63.433535], [10.429581, 63.433514], [10.429555, 63.433451], [10.429553, 63.433414], [10.429534, 63.433329], [10.429488, 63.433243], [10.429461, 63.4332], [10.429419, 63.433136], [10.429344, 63.433031], [10.429329, 63.43301], [10.429237, 63.432904], [10.429196, 63.432865], [10.429105, 63.432738], [10.429049, 63.432678], [10.429002, 63.432616], [10.428929, 63.432514], [10.428862, 63.432437], [10.428848, 63.432418], [10.428834, 63.432397], [10.428804, 63.43236], [10.428766, 63.432322], [10.428682, 63.432255], [10.428603, 63.432148], [10.428592, 63.432125], [10.428567, 63.432105], [10.428475, 63.432055], [10.428252, 63.43197], [10.428214, 63.431955], [10.427931, 63.43189], [10.427836, 63.431871], [10.427709, 63.431829], [10.427585, 63.431783], [10.427339, 63.431725], [10.427294, 63.431712], [10.427025, 63.431625], [10.426991, 63.431606], [10.426848, 63.431536], [10.426712, 63.431445], [10.426607, 63.431383], [10.426577, 63.43136], [10.426456, 63.431302], [10.426201, 63.43124], [10.426141, 63.431233], [10.425797, 63.431191], [10.425744, 63.43119], [10.42558, 63.431195], [10.425468, 63.431194], [10.425231, 63.431199], [10.424922, 63.431141], [10.424745, 63.431025], [10.424652, 63.430918], [10.424626, 63.430871], [10.424585, 63.430768], [10.424555, 63.430701], [10.42449, 63.430561], [10.424487, 63.430533], [10.424441, 63.430435], [10.42438, 63.430369], [10.424166, 63.430253], [10.424069, 63.430225], [10.424023, 63.430211], [10.423838, 63.430152], [10.42379, 63.430136], [10.423644, 63.430086], [10.423444, 63.430028], [10.4233, 63.429988], [10.423111, 63.429928], [10.423055, 63.429914], [10.422762, 63.42983], [10.422713, 63.429815], [10.422498, 63.429765], [10.422208, 63.429675], [10.421926, 63.429586], [10.421824, 63.429564], [10.421538, 63.429488], [10.421489, 63.429476], [10.421192, 63.429389], [10.421099, 63.429362], [10.420864, 63.429293], [10.42072, 63.429251], [10.42044, 63.429174], [10.420389, 63.429161], [10.420288, 63.429138], [10.420044, 63.429094], [10.419781, 63.428997], [10.419708, 63.428957], [10.419484, 63.428837], [10.419347, 63.428753], [10.419118, 63.42863], [10.419004, 63.428573], [10.418784, 63.42846], [10.418749, 63.428444], [10.41863, 63.428322], [10.418619, 63.428186], [10.418627, 63.428133], [10.418544, 63.42799], [10.418472, 63.427939], [10.418227, 63.42787], [10.417854, 63.427858], [10.417797, 63.427857], [10.417444, 63.427842], [10.417335, 63.427833], [10.417018, 63.427812], [10.416914, 63.427807], [10.416575, 63.427797], [10.416471, 63.427815], [10.416199, 63.427805], [10.415853, 63.42776], [10.415734, 63.427748], [10.415616, 63.427736], [10.415275, 63.427708], [10.415048, 63.4277], [10.414688, 63.427684], [10.414579, 63.427681], [10.414466, 63.427672], [10.414103, 63.427656], [10.413869, 63.427652], [10.413748, 63.427644], [10.41344, 63.427646], [10.413127, 63.427711], [10.41309, 63.427722], [10.413033, 63.427739], [10.413071, 63.427727]];
const etappe_4_distance_array = [0, 0, 7, 13, 26, 29, 38, 50, 59, 67, 82, 85, 90, 101, 108, 110, 112, 121, 124, 142, 148, 155, 167, 169, 183, 199, 204, 221, 231, 251, 260, 277, 290, 297, 300, 318, 321, 339, 345, 347, 364, 370, 381, 389, 406, 409, 426, 432, 442, 452, 467, 469, 476, 494, 500, 513, 530, 550, 553, 556, 574, 591, 597, 618, 622, 625, 639, 652, 670, 681, 690, 695, 705, 712, 720, 727, 737, 739, 742, 756, 759, 762, 778, 795, 811, 825, 838, 840, 846, 851, 854, 860, 865, 868, 877, 880, 891, 896, 902, 912, 918, 920, 935, 951, 958, 968, 984, 986, 994, 1002, 1018, 1023, 1039, 1054, 1059, 1075, 1086, 1092, 1110, 1113, 1116, 1132, 1135, 1152, 1155, 1173, 1182, 1202, 1211, 1228, 1231, 1242, 1245, 1256, 1258, 1268, 1273, 1275, 1282, 1286, 1296, 1306, 1311, 1318, 1331, 1333, 1346, 1350, 1365, 1373, 1380, 1392, 1401, 1403, 1406, 1410, 1415, 1423, 1436, 1438, 1441, 1448, 1463, 1465, 1481, 1486, 1494, 1502, 1516, 1519, 1536, 1538, 1549, 1561, 1570, 1573, 1582, 1596, 1599, 1617, 1620, 1628, 1633, 1645, 1662, 1678, 1690, 1696, 1707, 1715, 1731, 1734, 1745, 1753, 1770, 1776, 1779, 1790, 1793, 1802, 1814, 1822, 1834, 1837, 1855, 1858, 1870, 1887, 1904, 1910, 1927, 1929, 1947, 1953, 1967, 1975, 1992, 1995, 2000, 2013, 2030, 2036, 2054, 2065, 2083, 2092, 2108, 2111, 2126, 2141, 2147, 2163, 2170, 2184, 2203, 2206, 2224, 2229, 2245, 2250, 2267, 2273, 2287, 2305, 2311, 2317, 2334, 2345, 2363, 2369, 2375, 2393, 2405, 2411, 2426, 2443, 2445, 2449, 2451];
const etappe_4_altitude_array = [35, 35, 35, 35, 35, 35, 36, 36, 36, 37, 37, 37, 38, 39, 39, 39, 40, 39, 39, 39, 39, 39, 39, 39, 39, 38, 39, 38, 38, 38, 38, 37, 37, 37, 36, 36, 36, 36, 36, 35, 35, 34, 34, 34, 33, 33, 33, 33, 32, 32, 32, 31, 31, 31, 30, 30, 29, 29, 29, 29, 28, 28, 28, 28, 28, 27, 28, 28, 27, 28, 28, 29, 29, 30, 30, 31, 32, 32, 33, 33, 33, 33, 34, 34, 33, 33, 33, 33, 34, 34, 35, 35, 35, 36, 37, 37, 38, 38, 38, 39, 39, 40, 40, 41, 42, 42, 43, 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 45, 45, 46, 46, 47, 48, 49, 49, 50, 51, 52, 52, 53, 54, 54, 55, 55, 57, 57, 58, 59, 60, 60, 60, 61, 61, 62, 64, 64, 64, 65, 65, 66, 66, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 66, 66, 66, 65, 65, 65, 65, 64, 64, 65, 66, 66, 67, 67, 67, 67, 68, 68, 68, 67, 67, 66, 65, 65, 64, 64, 63, 63, 63, 63, 62, 62, 62, 62, 62, 62, 61, 62, 62, 62, 62, 61, 62, 62, 62, 61, 61, 61, 61, 61, 61, 61, 61, 62, 62, 62, 62, 62, 61, 61, 61, 61, 61, 61, 61, 61, 61, 60, 60, 60, 60, 60, 61, 61, 61, 61, 61, 61, 61, 62, 62, 62, 62];
const etappe_4_last_index = etappe_3_last_index + (etappe_4_distance_array.length - 1);


const etappe_5_coordinates = [[10.413074, 63.427695], [10.412737, 63.427808], [10.412682, 63.427828], [10.412479, 63.427897], [10.412373, 63.427927], [10.412261, 63.427943], [10.412203, 63.427947], [10.412142, 63.427953], [10.411912, 63.427969], [10.411858, 63.427973], [10.41166, 63.427982], [10.411541, 63.427988], [10.411254, 63.427979], [10.411098, 63.427969], [10.410704, 63.427978], [10.410559, 63.42798], [10.410255, 63.427955], [10.410197, 63.427943], [10.409942, 63.427839], [10.409908, 63.427818], [10.409873, 63.427801], [10.409828, 63.427777], [10.409786, 63.427742], [10.409769, 63.427711], [10.40976, 63.427681], [10.409756, 63.427514], [10.409756, 63.427456], [10.409722, 63.427296], [10.409676, 63.427203], [10.409652, 63.427181], [10.409638, 63.427158], [10.409624, 63.427084], [10.409622, 63.427059], [10.409617, 63.42703], [10.409622, 63.426888], [10.409659, 63.426816], [10.409824, 63.426652], [10.409854, 63.426628], [10.409931, 63.42652], [10.41, 63.426425], [10.410135, 63.426287], [10.410205, 63.426254], [10.410436, 63.426173], [10.410589, 63.426133], [10.41084, 63.426085], [10.410887, 63.426077], [10.411079, 63.426027], [10.411125, 63.426014], [10.41123, 63.425986], [10.411517, 63.42589], [10.41172, 63.425803], [10.411927, 63.425681], [10.412062, 63.425567], [10.412111, 63.425405], [10.412118, 63.425379], [10.412149, 63.425278], [10.412236, 63.425171], [10.412324, 63.425094], [10.412528, 63.424949], [10.412552, 63.424932], [10.412654, 63.424858], [10.412717, 63.424735], [10.412691, 63.4247], [10.412536, 63.42463], [10.412282, 63.424538], [10.41224, 63.42452], [10.412114, 63.424461], [10.412042, 63.424412], [10.411905, 63.424274], [10.411773, 63.424136], [10.411739, 63.424015], [10.411752, 63.423983], [10.411862, 63.423842], [10.411932, 63.423709], [10.411994, 63.423602], [10.412022, 63.423578], [10.412124, 63.423419], [10.412106, 63.423371], [10.412071, 63.423351], [10.411959, 63.423266], [10.412001, 63.423146], [10.412007, 63.423118], [10.411893, 63.423005], [10.41175, 63.422943], [10.411599, 63.422879], [10.411338, 63.422792], [10.411041, 63.422696], [10.410992, 63.422682], [10.410718, 63.422574], [10.410457, 63.422464], [10.410198, 63.422356], [10.410152, 63.422337], [10.409894, 63.422228], [10.40975, 63.422173], [10.409463, 63.422066], [10.409367, 63.422035], [10.409065, 63.421939], [10.408961, 63.421912], [10.408863, 63.421884], [10.408671, 63.421804], [10.408368, 63.421678], [10.408229, 63.421622], [10.407942, 63.421518], [10.407887, 63.421501], [10.407789, 63.42147], [10.407485, 63.421373], [10.407439, 63.421353], [10.407115, 63.421253], [10.407069, 63.421234], [10.406788, 63.421122], [10.406652, 63.421063], [10.406368, 63.420947], [10.406325, 63.42093], [10.406012, 63.420819], [10.405913, 63.420788], [10.405629, 63.420685], [10.405583, 63.420666], [10.405537, 63.420646], [10.40524, 63.420539], [10.405194, 63.420519], [10.404894, 63.420412], [10.404737, 63.420362], [10.404458, 63.420251], [10.404359, 63.420227], [10.404091, 63.420136], [10.40405, 63.420121], [10.403778, 63.420031], [10.403689, 63.420003], [10.403563, 63.419952], [10.403482, 63.419915], [10.403172, 63.419832], [10.402782, 63.419813], [10.402651, 63.419816], [10.402317, 63.419864], [10.402253, 63.419882], [10.402211, 63.419892], [10.402089, 63.419906], [10.401861, 63.419931], [10.401497, 63.41991], [10.401233, 63.419817], [10.401093, 63.41974], [10.401076, 63.419721], [10.40105, 63.419641], [10.401048, 63.419615], [10.40115, 63.419555], [10.4012, 63.419557], [10.401465, 63.419583]];
const etappe_5_distance_array = [0, 21, 24, 37, 43, 49, 52, 55, 67, 69, 79, 85, 100, 107, 127, 134, 150, 153, 170, 173, 176, 179, 184, 187, 191, 209, 216, 234, 244, 247, 250, 258, 261, 264, 280, 288, 308, 311, 324, 335, 352, 357, 371, 380, 394, 396, 407, 410, 416, 434, 448, 465, 480, 498, 501, 512, 525, 534, 554, 556, 566, 580, 584, 595, 611, 614, 623, 630, 646, 663, 677, 680, 697, 712, 725, 728, 746, 751, 754, 765, 779, 782, 796, 806, 816, 832, 851, 853, 872, 890, 907, 910, 928, 938, 956, 962, 981, 987, 992, 1006, 1026, 1036, 1054, 1057, 1063, 1082, 1085, 1105, 1108, 1127, 1136, 1155, 1158, 1178, 1184, 1202, 1206, 1209, 1228, 1231, 1250, 1260, 1278, 1284, 1301, 1303, 1320, 1326, 1334, 1340, 1358, 1378, 1384, 1402, 1405, 1408, 1414, 1426, 1444, 1461, 1472, 1474, 1483, 1486, 1495, 1497, 1511];
const etappe_5_altitude_array = [67, 68, 68, 68, 69, 69, 69, 69, 70, 71, 72, 72, 72, 72, 71, 71, 70, 69, 68, 68, 67, 67, 67, 66, 66, 66, 66, 66, 67, 67, 67, 67, 67, 67, 66, 66, 66, 66, 66, 66, 67, 67, 68, 68, 69, 69, 70, 70, 70, 71, 71, 71, 71, 70, 70, 69, 68, 68, 67, 67, 67, 66, 66, 66, 64, 64, 64, 63, 62, 61, 60, 60, 60, 61, 62, 62, 63, 63, 63, 63, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 65, 65, 64, 65, 64, 65, 65, 65, 65, 64, 64, 64, 64, 64, 64, 63, 64, 63, 63, 63, 63, 64, 63, 63, 64, 64, 64, 65, 65, 65, 65, 65, 65, 65, 65, 65, 64, 63, 62, 62, 63, 63, 64, 64, 65, 65, 65];
const etappe_5_last_index = etappe_4_last_index + (etappe_5_distance_array.length - 1);

const total_coordinate_array = [...etappe_1_coordinates, ...etappe_2_coordinates, ...etappe_3_coordinates, ...etappe_4_coordinates, ...etappe_5_coordinates];
const total_elevation_array = [...etappe_1_altitude_array, ...etappe_2_altitude_array, ...etappe_3_altitude_array, ...etappe_4_altitude_array, ...etappe_5_altitude_array];


// Distance array needs to add previous distance from earlier etappe, which is what we are doing here
var all_distance_arrays = [etappe_1_distance_array, etappe_2_distance_array, etappe_3_distance_array, etappe_4_distance_array, etappe_5_distance_array];
var total_distance_array = [];

var prev_ending_distance = 0
for (var j=0; j<all_distance_arrays.length; j++) {
  for (var i=0; i<all_distance_arrays[j].length; i++) {
    total_distance_array.push(all_distance_arrays[j][i] + prev_ending_distance)
  }
  prev_ending_distance = prev_ending_distance + all_distance_arrays[j][all_distance_arrays[j].length-1]
}

// ********** //
// ETAPPERUTE //
// ********** //



mapboxgl.accessToken = 'pk.eyJ1IjoibWFya3VzdmhhZ2VuIiwiYSI6ImNtZ2NlNjNrbjE0bzkybHI1ZmM3MjV3aTEifQ.BE1AT8J3W1peoFGt4LOxOw';
    const map = new mapboxgl.Map({
        container: 'map',
        style: 'mapbox://styles/mapbox/light-v9',
        center: [10.379895, 63.432254],
        zoom: 12
    });

    map.on('load', () => {
        // This function draws each "etappe"
        function createEtappe(number, coordinates, routeColor, startDotColor) {
          map.addSource('etappe' + number, {
              'type': 'geojson',
              'data': {
                  'type': 'Feature',
                  'properties': {},
                  'geometry': {
                      'type': 'LineString',
                      'coordinates': coordinates
                  }
              }
          });

          map.addLayer({
              'id': 'etappe' + number,
              'type': 'line',
              'source': 'etappe' + number,
              'layout': {
                  'line-join': 'round',
                  'line-cap': 'round'
              },
              'paint': {
                  'line-color': routeColor,
                  'line-width': 5
              }
          });

          // Labeling the start of this etappe
          map.addSource('etappe' + number + 'start', {
              type: 'geojson',
              data: {
                  type: 'Feature',
                  geometry: {
                      type: 'Point',
                      coordinates: coordinates[0]
                  },
                  properties: {
                    label: number.toString()
                  }
              }
          });

          map.addLayer({
            id: 'etappe' + number + 'start',
            type: 'circle',
            source: 'etappe' + number + 'start',
            paint: {
                'circle-radius': 10, // Radius in pixels
                'circle-color': startDotColor,
                'circle-opacity': 0.8 // Semi-transparent
            }
          });

          map.addLayer({
              id: 'etappe' + number + 'start' + '-label',
              type: 'symbol',
              source: 'etappe' + number + 'start',
              layout: {
                  'text-field': ['get', 'label'], // Use the 'label' property from your GeoJSON
                  'text-size': 20,
                  'text-allow-overlap': true // Allow text to overlap other symbols if necessary
              }
          });
      }

      createEtappe(1, etappe_1_coordinates, "red", "#CD2C58");
      createEtappe(2, etappe_2_coordinates, "red", "#CD2C58");
      createEtappe(3, etappe_3_coordinates, "red", "#CD2C58");
      createEtappe(4, etappe_4_coordinates, "red", "#CD2C58");
      createEtappe(5, etappe_5_coordinates, "red", "#CD2C58");

            // Moving circle
            map.addSource('circle-center', {
                type: 'geojson',
                data: {
                    type: 'Feature',
                    geometry: {
                        type: 'Point',
                        coordinates: total_coordinate_array[0]
                    },
                    properties: {}
                }
            });

            map.addLayer({
              id: 'my-circle',
              type: 'circle',
              source: 'circle-center',
              paint: {
                  'circle-radius': 10, // Radius in pixels
                  'circle-color': '#FF0000', // Red color
                  'circle-opacity': 0.8 // Semi-transparent
              }
            });
        });


// ********* //
// HØYDEKART //
// ********* //

Chart.register( Chart.LineElement, Chart.LineController, Chart.Legend, Chart.Tooltip, Chart.LinearScale, Chart.PointElement, Chart.Filler, Chart.Title);

const ctx = document.getElementById("route-elevation-chart").getContext("2d");
const chartData = {
    labels: total_distance_array,
    datasets: [{
      data: total_elevation_array,
      fill: true,
      borderColor: 'red',
      backgroundColor: 'rgba(255, 0, 0, .3)',
      tension: 0.1,
      pointRadius: 0,
      spanGaps: true
    }]
  };

  const config = {
    type: 'line',
    data: chartData,
    plugins: [{
      beforeInit: (chart, args, options) => {
        const maxHeight = Math.max(...chart.data.datasets[0].data);
        chart.options.scales.x.min = Math.min(...chart.data.labels);
        chart.options.scales.x.max = Math.max(...chart.data.labels);
        chart.options.scales.y.max = maxHeight + Math.round(maxHeight * 0.2);
        chart.options.scales.y1.max = maxHeight + Math.round(maxHeight * 0.2);
      }
    }],
    options: {
      onHover: (event, chartElements) => {
        // Capture index of current point being hovered
        if (chartElements.length) {
          const { datasetIndex, index } = chartElements[0];
          // Draw circle
          map.getSource('circle-center').setData({
                type: 'Feature',
                geometry: {
                    type: 'Point',
                    coordinates: total_coordinate_array[index] // New coordinates
                },
                properties: {}
            });
        }
      },
      animation: false,
      maintainAspectRatio: false,
      interaction: { intersect: false, mode: 'index' },
      tooltip: { position: 'nearest' },
      scales: {
        x: { type: 'linear' },
        y: { type: 'linear', beginAtZero: true },
        y1: { type: 'linear', display: true, position: 'right', beginAtZero: true, grid: { drawOnChartArea: false }},
      },
      plugins: {
        annotation: {
                    annotations: {
                        etappe1Line:{
                          type: 'line',
                          mode: 'vertical',
                          scaleID: 'x',
                          value: total_distance_array[0],
                          borderColor: '#CD2C58',
                          borderWidth: 6,
                          label: {
                              display: true,
                              content: 'E1 1609m',
                              enabled: true,
                              position: 'start',
                              xAdjust: 4,
                              yAdjust: -4,
                              backgroundColor: 'rgba(132, 50, 20, 0.7)',
                              font: {
                                  size: 12
                              }
                          }
                        },

                        etappe2Line: {
                            type: 'line',
                            mode: 'vertical',
                            scaleID: 'x',
                            value: total_distance_array[etappe_1_last_index+1],
                            borderColor: '#CD2C58',
                            borderWidth: 3,
                            label: {
                                display: true,
                                content: 'E2 2590m',
                                enabled: true,
                                position: 'start',
                                xAdjust: 38,
                                yAdjust: -4,
                                backgroundColor: 'rgba(132, 50, 20, 0.7)',
                                font: {
                                    size: 12
                                }
                            }
                        },

                        etappe3Line: {
                            type: 'line',
                            mode: 'vertical',
                            scaleID: 'x',
                            value: total_distance_array[etappe_2_last_index+1],
                            borderColor: '#CD2C58',
                            borderWidth: 3,
                            label: {
                                display: true,
                                content: 'E3 1000m',
                                enabled: true,
                                position: 'start',
                                xAdjust: 38,
                                yAdjust: -4,
                                backgroundColor: 'rgba(132, 50, 20, 0.7)',
                                font: {
                                    size: 12
                                }
                            }
                        },

                        etappe4Line: {
                            type: 'line',
                            mode: 'vertical',
                            scaleID: 'x',
                            value: total_distance_array[etappe_3_last_index+2],
                            borderColor: '#CD2C58',
                            borderWidth: 3,
                            label: {
                                display: true,
                                content: 'E4 2430m',
                                enabled: true,
                                position: 'start',
                                xAdjust: 38,
                                yAdjust: -4,
                                backgroundColor: 'rgba(132, 50, 20, 0.7)',
                                font: {
                                    size: 12
                                }
                            }
                        },


                        etappe5Line: {
                            type: 'line',
                            mode: 'vertical',
                            scaleID: 'x',
                            value: total_distance_array[etappe_4_last_index+2],
                            borderColor: '#CD2C58',
                            borderWidth: 3,
                            label: {
                                display: true,
                                content: 'E5 1500m',
                                enabled: true,
                                position: 'start',
                                xAdjust: 38,
                                yAdjust: -4,
                                backgroundColor: 'rgba(132, 50, 20, 0.7)',
                                font: {
                                    size: 12
                                }
                            }
                        }
                    }
                },
        title: { align: "end", display: true, text: "Distanse, m / Høydemeter, m" },
        legend: { display: false },
        tooltip: {
          displayColors: false,
          callbacks: {
            title: (tooltipItems) => {
              return "Distanse løpt: " + tooltipItems[0].label + 'm'
            },
            label: (tooltipItem) => {
              return "Høydemeter: " + tooltipItem.raw + 'm'
            },
          }
        }
      }
    }
  };

const chart = new Chart(ctx, config);



// *************** //
// EVENT-LISTENERS //
// *************** //
function distBetweenCoords(coord1, coord2) {
  xDiff = Math.abs(coord2[0]-coord1[0]);
  yDiff = Math.abs(coord2[1]-coord1[1]);
  return xDiff + yDiff;
}


map.on("mousemove", (e) => {
  var activeCoord = [parseFloat(JSON.stringify(e.lngLat.lng)), parseFloat(JSON.stringify(e.lngLat.lat))];

  // Now we find closest coordinate in total_coordinate_array. We also store its index in the array for later.
  var closestCoord = [0,0]
  var index = 0;
  for (var i = 0; i < total_coordinate_array.length; i++) {
    if (distBetweenCoords(closestCoord, activeCoord) > distBetweenCoords(activeCoord,total_coordinate_array[i])) {
      closestCoord = total_coordinate_array[i]
      index = i;
    }
  }

  // Decide what etappe is active
  if (index <= etappe_1_last_index) {
    document.getElementById("etappe").innerHTML = "Promenaden";
    document.getElementById("etappeFraTil").innerHTML = "Skansenparken – Rockheim Park";
    document.getElementById("etappeInfo").innerHTML = "1609m &nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp; Flat";
  }
  else if (index <= etappe_2_last_index) {
    document.getElementById("etappe").innerHTML = "Rockheim";
    document.getElementById("etappeFraTil").innerHTML = "Rockheim Park - Dakotaparken";
    document.getElementById("etappeInfo").innerHTML = "2590m &nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp; Flat med slak stigning til veksling";
  }
  else if (index <= etappe_3_last_index) {
    document.getElementById("etappe").innerHTML = "Lade";
    document.getElementById("etappeFraTil").innerHTML = "Dakotaparken – Dronning Mauds Minne Høgskole";
    document.getElementById("etappeInfo").innerHTML = "1000m &nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;Flat med små høydeforskjeller";
  }
  else if (index <= etappe_4_last_index) {
    document.getElementById("etappe").innerHTML = "Rosenborg";
    document.getElementById("etappeFraTil").innerHTML = "Dronning Mauds Minne Høgskole – Festningsparken";
    document.getElementById("etappeInfo").innerHTML = "2430m &nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;Lett kupert med slake stigninger";
  }
  else if (index <= etappe_5_last_index) {
    document.getElementById("etappe").innerHTML = "Kristiansten";
    document.getElementById("etappeFraTil").innerHTML = "Festningsparken - Høgskoleparken";
    document.getElementById("etappeInfo").innerHTML = "1500m &nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;Variert og lett kupert etappe";
  }


  // Let us move the red point on the map accordingly to where the cursor is
  map.getSource('circle-center').setData({
        type: 'Feature',
        geometry: {
            type: 'Point',
            coordinates: total_coordinate_array[index] // New coordinates
        },
        properties: {}
    });

  // Now we pass this information to the altitude map
  const pointIndex = index;
  const datasetIndex = 0;
  const meta = chart.getDatasetMeta(datasetIndex);
  const point = meta.data[pointIndex];

  chart.tooltip.setActiveElements(
    [{ datasetIndex, index: pointIndex }],
    { x: point.x, y: point.y }
  );
  chart.update();
});
